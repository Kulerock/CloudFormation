AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to deploy VPC and related resources

# VPC & Availability Zones
Parameters:
  Region:
    Type: String
    Default: eu-north-1
    Description: Please enter the AWS region
  InstanceType:
    Type: String
    Default: t3.micro
    Description: Please enter the instance type
  VpcId:
    Type: String
    Default: vpc-04638fa44d53e81de
  KeyPair:
    Type: String
    Default: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIV98DkEK9IyCG9AqRBvhguNKKniqouWNfk2S6keGsPY kulerock@ubuntu"
  AllowPorts:
    Type: CommaDelimitedList
    Default: "80,443"

# Mapping
Mappings:
  RegionMap:
    eu-north-1:
      az1: eu-north-1a
      az2: eu-north-1b

# Resources
Resources:
  # Subnets
  # Subnet1:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VpcId
  #     CidrBlock: 172.31.1.0/24
  #     AvailabilityZone: !FindInMap [RegionMap, !Ref AWS::Region, az1]

  # Subnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VpcId
  #     CidrBlock: 172.31.2.0/24
  #     AvailabilityZone: !FindInMap [RegionMap, !Ref AWS::Region, az2]

  # Security Group & dynamic ports
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  # Launch Template
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: WebServer-Highly-Available-1
      LaunchTemplateData:
        ImageId: ami-097c5c21a18dc59ea
        InstanceType: !Ref InstanceType
        NetworkInterfaces:
          - DeviceIndex: 0
            Groups:
              - !GetAtt SecurityGroup.GroupId
            DeleteOnTermination: true
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum -y update
            yum -y install httpd
            myip=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
            echo "<html><body bgcolor='green'><h2>WebServer with IP: <font color='red'>$myip</font></h2></body></html>" > /var/www/html/index.html
            service httpd start
            chkconfig httpd on
  # Auto Scaling Group
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - subnet-03282908de6da2cc6
        - subnet-01c0d6e07209094ca
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: "1"
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: WebServer-in-ASG
          PropagateAtLaunch: true
        - Key: Owner
          Value: Kate
          PropagateAtLaunch: true

  # Load Balancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        - !FindInMap [RegionMap, !Ref AWS::Region, az1]
        - !FindInMap [RegionMap, !Ref AWS::Region, az2]
      Listeners:
        - LoadBalancerPort: 80
          InstancePort: 80
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        Interval: 10
        Timeout: 5
        UnhealthyThreshold: 2
        HealthyThreshold: 2
      SecurityGroups:
        - !Ref SecurityGroup

# Output
Outputs:
  WebLoadBalancerURL:
    Description: The URL of the web load balancer
    Value: !GetAtt LoadBalancer.DNSName
